// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TwitterWebMVC.Data;

namespace TwitterWebMVC.Migrations
{
    [DbContext(typeof(TweetDbContext))]
    [Migration("20180110162605_TweetHashtagTD")]
    partial class TweetHashtagTD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TwitterWebMVC.Models.Hashtag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("TimesUsed");

                    b.HasKey("ID");

                    b.ToTable("Hashtags");
                });

            modelBuilder.Entity("TwitterWebMVC.Models.Language", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("TimesUsed");

                    b.HasKey("ID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("TwitterWebMVC.Models.Tweet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("LanguageID");

                    b.HasKey("ID");

                    b.HasIndex("LanguageID");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("TwitterWebMVC.Models.TweetHashtag", b =>
                {
                    b.Property<int>("HashtagID");

                    b.Property<int>("TweetID");

                    b.Property<int>("ID");

                    b.HasKey("HashtagID", "TweetID");

                    b.HasIndex("TweetID");

                    b.ToTable("TweetHashtags");
                });

            modelBuilder.Entity("TwitterWebMVC.Models.Tweet", b =>
                {
                    b.HasOne("TwitterWebMVC.Models.Language", "Language")
                        .WithMany("Tweets")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TwitterWebMVC.Models.TweetHashtag", b =>
                {
                    b.HasOne("TwitterWebMVC.Models.Hashtag", "Hashtag")
                        .WithMany("TweetHashtags")
                        .HasForeignKey("HashtagID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TwitterWebMVC.Models.Tweet", "Tweet")
                        .WithMany("TweetHashtags")
                        .HasForeignKey("TweetID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
